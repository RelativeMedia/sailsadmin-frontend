"use strict";angular.module("directives.navbar",[]).directive("navbar",["Auth",function(e){return{templateUrl:"app/common/directives/navbar/navbar.tpl.html",controller:["$rootScope","$scope","$state",function(t,r,s){r.isAuthorized=function(t){return e.isAuthorized(t)},r.logout=function(){e.logout(),s.go("auth.login")}}]}}]),angular.module("directives.ngPasswordStrength",[]).directive("ngPasswordStrength",function(){return{template:'<div class="progress {{outerClass}} {{valueClass.outer}}"><div class="{{valueClass.inner}} {{innerClass}}" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( value + \'%\' ) }"><span class="sr-only">{{value}}%</span></div></div>',restrict:"A",scope:{pwd:"=ngPasswordStrength",value:"=strength",innerClassPrefix:"@?",outerClassPrefix:"@?",innerClass:"@?",outerClass:"@?",mode:"@?"},link:function(e){function t(e){var t,r,s,n,o=function(e){for(var t=e.length-1,r="";t>=0;r+=e[t--]);return r},a={pos:{},neg:{}},i={pos:{},neg:{seqLetter:0,seqNumber:0,seqSymbol:0}},l=0,c="abcdefghijklmnopqrstuvwxyz",d="01234567890",u="\\!@#$%&/()=?Â¿";if(e){for(a.pos.lower=e.match(/[a-z]/g),a.pos.upper=e.match(/[A-Z]/g),a.pos.numbers=e.match(/\d/g),a.pos.symbols=e.match(/[$-/:-?{-~!^_`\[\]]/g),a.pos.middleNumber=e.slice(1,-1).match(/\d/g),a.pos.middleSymbol=e.slice(1,-1).match(/[$-/:-?{-~!^_`\[\]]/g),i.pos.lower=a.pos.lower?a.pos.lower.length:0,i.pos.upper=a.pos.upper?a.pos.upper.length:0,i.pos.numbers=a.pos.numbers?a.pos.numbers.length:0,i.pos.symbols=a.pos.symbols?a.pos.symbols.length:0,t=_.reduce(i.pos,function(e,t){return e+Math.min(1,t)},0),i.pos.numChars=e.length,t+=i.pos.numChars>=8?1:0,i.pos.requirements=t>=3?t:0,i.pos.middleNumber=a.pos.middleNumber?a.pos.middleNumber.length:0,i.pos.middleSymbol=a.pos.middleSymbol?a.pos.middleSymbol.length:0,a.neg.consecLower=e.match(/(?=([a-z]{2}))/g),a.neg.consecUpper=e.match(/(?=([A-Z]{2}))/g),a.neg.consecNumbers=e.match(/(?=(\d{2}))/g),a.neg.onlyNumbers=e.match(/^[0-9]*$/g),a.neg.onlyLetters=e.match(/^([a-z]|[A-Z])*$/g),i.neg.consecLower=a.neg.consecLower?a.neg.consecLower.length:0,i.neg.consecUpper=a.neg.consecUpper?a.neg.consecUpper.length:0,i.neg.consecNumbers=a.neg.consecNumbers?a.neg.consecNumbers.length:0,n=0;n<c.length-2;n++){var m=e.toLowerCase();s=c.substring(n,parseInt(n+3)),r=o(s),(-1!==m.indexOf(s)||-1!==m.indexOf(r))&&i.neg.seqLetter++}for(n=0;n<d.length-2;n++)s=d.substring(n,parseInt(n+3)),r=o(s),(-1!==e.indexOf(s)||-1!==e.toLowerCase().indexOf(r))&&i.neg.seqNumber++;for(n=0;n<u.length-2;n++)s=u.substring(n,parseInt(n+3)),r=o(s),(-1!==e.indexOf(s)||-1!==e.toLowerCase().indexOf(r))&&i.neg.seqSymbol++;i.neg.repeated=_.chain(e.toLowerCase().split("")).countBy(function(e){return e}).reject(function(e){return 1===e}).reduce(function(e,t){return e+t},0).value(),l+=4*i.pos.numChars,i.pos.upper&&(l+=2*(i.pos.numChars-i.pos.upper)),i.pos.lower&&(l+=2*(i.pos.numChars-i.pos.lower)),(i.pos.upper||i.pos.lower)&&(l+=4*i.pos.numbers),l+=6*i.pos.symbols,l+=2*(i.pos.middleSymbol+i.pos.middleNumber),l+=2*i.pos.requirements,l-=2*i.neg.consecLower,l-=2*i.neg.consecUpper,l-=2*i.neg.consecNumbers,l-=3*i.neg.seqNumber,l-=3*i.neg.seqLetter,l-=3*i.neg.seqSymbol,a.neg.onlyNumbers&&(l-=i.pos.numChars),a.neg.onlyLetters&&(l-=i.pos.numChars),i.neg.repeated&&(l-=i.neg.repeated/i.pos.numChars*10)}return Math.max(0,Math.min(100,Math.round(l)))}function r(t){switch(Math.round(t/33)){case 0:case 1:return{outer:e.outerClassPrefix+"danger",inner:e.innerClassPrefix+"danger"};case 2:return{outer:e.outerClassPrefix+"warning",inner:e.innerClassPrefix+"warning"};case 3:return{outer:e.outerClassPrefix+"success",inner:e.innerClassPrefix+"success"}}}e.value=e.value||t(e.pwd);var s={foundation:{innerClass:"meter"},bootstrap:{innerClass:"progress-bar",innerClassPrefix:"progress-bar-"}};e.innerClassPrefix=e.innerClassPrefix||"",e.outerClassPrefix=e.outerClassPrefix||"",e.$watch("mode",function(){return"bootstrap"===e.mode||"foundation"===e.mode?void angular.extend(e,s[e.mode]):void(e.valueClass=r(e.value))}),e.$watch("pwd",function(){e.value=t(e.pwd),e.valueClass=r(e.value)})}}}),angular.module("directives.confirmDelete",[]).directive("confirm",["$modal",function(e){return{restrict:"A",scope:{action:"&confirm",text:"@",title:"@"},link:function(t,r,s){r.on("click",function(){var r=e.open({templateUrl:"app/common/directives/confirmDelete/confirmDelete.tpl.html",controller:["$scope","$modalInstance","text","title",function(e,t,r,s){e.text=r,e.title=s,e.ok=function(){t.close()},e.cancel=function(){t.dismiss("cancel")}}],resolve:{text:function(){return t.text},title:function(){return t.title}}});r.result.then(function(){t.action()},function(){})})}}}]),angular.module("App.user",[]).config(["$stateProvider","AccessLevels",function(e,t){e.state("user",{"abstract":!0,data:{access:t.roles.admin},views:{"":{templateUrl:"app/common/templates/layout.tpl.html"}}}).state("user.index",{url:"/user",resolve:{users:["User",function(e){return e.find().then(function(e){return e},function t(t){return t})}]},views:{content:{templateUrl:"app/components/user/index.tpl.html",controller:"UserListController"}}}).state("user.create",{url:"/user/create",views:{content:{templateUrl:"app/components/user/create.tpl.html",controller:"UserCreateController"}}})}]).controller("UserListController",["$scope","$state","$log","users","User",function(e,t,r,s,n){e.users=s,e.deleteUser=function(t,s){r.debug("Deleting User",s),n.destroy({id:s.id}).then(function(r){e.users.splice(t,1)},function(e){r.error(e)})}}]).controller("UserCreateController",["$scope","$state","$log","User","AccessLevels",function(e,t,r,s,n){e.submitDisabled=!1,e.groups=n.groups,e.newUser={accessLevel:1},e.register=function(){e.submitDisabled=!0,r.debug(e.newUser),s.create(e.newUser).then(function(e){t.go("user.index")},function n(t){console.error(t),e.submitDisabled=!1,Error["catch"](n)})}}]),angular.module("App.server",[]).config(["$stateProvider","AccessLevels",function(e,t){e.state("server",{"abstract":!0,data:{access:t.roles["public"]},views:{"":{templateUrl:"app/common/templates/layout.tpl.html"}}}).state("server.index",{url:"/server",resolve:{servers:["Server",function(e){return e.find().then(function(e){return e},function t(t){return t})}],totalServers:["Server",function(e){return e.count().then(function(e){return e.count},function t(t){return t})}],tiers:["Tier",function(e){return e.find().then(function(e){return e},function t(t){return t})}]},views:{content:{templateUrl:"app/components/server/index.tpl.html",controller:"ServerListController"}}}).state("server.create",{url:"/server/create",resolve:{tiers:["Tier",function(e){return e.find().then(function(e){return e},function t(t){return t})}],locations:["Location",function(e){return e.find().then(function(e){return e},function t(t){return t})}],components:["Component",function(e){return e.find().then(function(e){return e},function t(t){return t})}],roles:["Role",function(e){return e.find().then(function(e){return e},function t(t){return t})}]},views:{content:{templateUrl:"app/components/server/create.tpl.html",controller:"ServerCreateController"}}}).state("server.edit",{url:"/server/edit/:id",resolve:{server:["Server","$stateParams",function(e,t){return e.findById(t.id).then(function(e){return e},function r(r){return r})}],tiers:["Tier",function(e){return e.find().then(function(e){return e},function t(t){return t})}],locations:["Location",function(e){return e.find().then(function(e){return e},function t(t){return t})}],components:["Component",function(e){return e.find().then(function(e){return e},function t(t){return t})}],roles:["Role",function(e){return e.find().then(function(e){return e},function t(t){return t})}]},views:{content:{templateUrl:"app/components/server/edit.tpl.html",controller:"ServerEditController"}}}).state("server.detail",{url:"/server/detail/:id",resolve:{server:["Server","$stateParams",function(e,t){return e.findById(t.id).then(function(e){return e},function r(r){return r})}]},views:{content:{templateUrl:"app/components/server/detail.tpl.html",controller:"ServerDetailController"}}})}]).controller("ServerListController",["$scope","$filter","$state","$log","servers","totalServers","tiers","Server","Config","$modal","lodash",function(e,t,r,s,n,o,a,i,l,c,d){e.servers=n,e.tiers=a,e.totalServers=o,e.serversPerPage=30,e.pagination={current:1},e.filter={limit:30,skip:0},e.applyFilter=function(){i.find(e.filter).then(function(t){e.servers=t,i.count({tier:e.filter.tier}).then(function(t){e.totalServers=t.count},function r(r){s.error(r)})},function t(t){s.error(t)})},e.pageChanged=function(t){e.filter.skip=(t-1)*e.serversPerPage,i.find(e.filter).then(function(t){e.servers=t},function r(r){s.error(r)})},e.open=function(t){c.open({animation:!0,templateUrl:"app/components/server/apiKey.modal.tpl.html",resolve:{server:function(){var r=e.servers[t];return r}},controller:["$scope","$modalInstance","server","Utils",function(e,t,r,s){r.urls.agentUpdate=s.prepareUrl(null,!0)+r.urls.agentUpdate,e.server=r,e.close=function(){t.dismiss("cancel")}}]})},e.toggleAgentStatus=function(t,r){i.toggleAgentStatus(r.id).then(function(r){e.servers[t]=r},function(e){s.error(e)})},e.deleteServer=function(t,r){s.debug("Deleting Server",r),i.destroy({id:r.id}).then(function(r){e.servers.splice(t,1)},function(e){s.error(e)})}}]).controller("ServerDetailController",["$scope","$state","$log","server","Server",function(e,t,r,s,n){e.server=s}]).controller("ServerEditController",["$scope","$state","$log","server","Server","tiers","locations","roles","components",function(e,t,r,s,n,o,a,i,l){e.submitDisabled=!1,e.server=s,e.tiers=o,e.locations=a,e.roles=i,e.components=l,e.submit=function(){e.submitDisabled=!0,n.update(e.server).then(function(e){t.go("server.detail",{id:e.id})},function(t){r.error(t),e.submitDisabled=!1,Error["catch"](t)})}}]).controller("ServerCreateController",["$scope","$state","$log","Server","tiers","locations","roles","components",function(e,t,r,s,n,o,a,i){e.submitDisabled=!1,e.tiers=n,e.locations=o,e.roles=a,e.components=i,e.create=function(){e.submitDisabled=!0,s.create(e.newServer).then(function(e){t.go("server.detail",{id:e.id})},function(t){r.error(t),e.submitDisabled=!1,Error["catch"](t)})}}]),angular.module("App.dashboard",[]).config(["$stateProvider","AccessLevels",function(e,t){e.state("dashboard",{"abstract":!0,data:{access:t.roles.user},views:{"":{templateUrl:"app/common/templates/layout.tpl.html"}}}).state("dashboard.index",{url:"/",views:{content:{templateUrl:"app/components/dashboard/dashboard.tpl.html",controller:"DashboardController"}}})}]).controller("DashboardController",["$scope","$state","$log",function(e,t,r){}]),angular.module("App.checklist",["checklist.model","checklist.controller"]).config(["$stateProvider","AccessLevels",function(e,t){e.state("checklist",{"abstract":!0,data:{access:t.roles.user},views:{"":{templateUrl:"app/common/templates/layout_fluid.tpl.html"}}}).state("checklist.index",{url:"/checklist",views:{content:{templateUrl:"app/components/checklist/list.tpl.html",controller:"ChecklistIndexController"}}}).state("checklist.detail",{url:"/checklist/detail/:id",resolve:{items:["$stateParams","$sails","$log",function(e,t,r){return t.get("/v1/item",{checklist:e.id,limit:1e3,sort:"name ASC"}).then(function(e){return e.data},function(e){r.error(e)})}]},views:{content:{templateUrl:"app/components/checklist/detail.tpl.html",controller:"ChecklistDetailController"}}})}]),angular.module("checklist.model",[]).factory("Socket",["$sailsSocket",function(e){return e()}]).factory("Checklist",["$log","Utils","$http","$q","$sails",function(e,t,r,s,n){return{find:function(t){var r=s.defer(),o={params:t||{sort:"id"}};return n.get("/v1/checklist",o).success(function(t,s,n,o){e.debug(o),r.resolve(t)}).error(function(e,t){r.reject(e)}),r.promise},findById:function(e){var n=s.defer();return r.get(t.prepareUrl("/checklist/"+e)).success(function(e,t){n.resolve(e)}).error(function(e,t){n.reject(e)}),n.promise},create:function(e){var n=s.defer();return r.post(t.prepareUrl("/checklist"),e).success(function(e,t){n.resolve(e)}).error(function(e,t){n.reject(e)}),n.promise},update:function(e){var n=s.defer(),o={items:e.items};return r.post(t.prepareUrl("/checklist/"+e.id),o).success(function(e){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise},destroy:function(e){var n=s.defer();return r["delete"](t.prepareUrl("/checklist/"+e.id)).success(function(e,t){n.resolve(e)}).error(function(e,t){n.reject(e)}),n.promise}}}]),angular.module("checklist.controller",[]).controller("ChecklistIndexController",["$rootScope","$scope","$state","lodash","$log","$http","$sails","Checklist","Utils",function(e,t,r,s,n,o,a,i,l){t.checklists=[],t.statuses=[],t.servers=[],t.submitCreateChecklist=!1,a.get("/v1/checklist").then(function(e){t.checklists=e.data},function(e){n.error(e)}),t.tiers=["Dev","Test","QA","Prod","Tech Sandbox","Functional Sandbox","N1 Sandbox","Dev1","Test1","QA1","Training","Other"],t.newChecklist={items:[],statuses:[],createdBy:e.user.uid},t.submitDisabled=!1,t.getServers=function(e){n.debug("getServers",e),o.get(l.prepareUrl("/server"),{params:{tier:e,limit:1e3,sort:"hostname"}}).then(function(e){n.debug(e),t.servers=e.data},function(e){n.error(e)})},t.addChecklistStatus=function(e){t.newChecklist.statuses.push({name:e.name,value:!1}),t.newChecklistStatus=null},t.checkAllListItems=function(e){t.checkAll=t.checkAll?!0:!1,angular.forEach(t.servers,function(e){e.selected=t.checkAll,t.addChecklistItem(e.hostname)})},t.addChecklistItem=function(e){t.newChecklist.items.push({name:e,statuses:t.newChecklist.statuses})},t.deleteStatus=function(e){t.newChecklist.statuses.splice(e,1)},t.deleteItem=function(e){t.newChecklist.items.splice(e,1)},t.destroy=function(e,r){i.destroy(r).then(function(r){n.debug("Checklist destroyed!",r),t.checklists.splice(e,1)},function(e){t.submitDisabled=!1,n.error(e)})},t.create=function(){t.submitCreateChecklist=!0,n.debug(t.newChecklist),i.create(t.newChecklist).then(function(e){t.submitCreateChecklist=!1,n.debug("New Checklist created!",e),t.checklists.push(e)},function(e){t.submitCreateChecklist=!1,n.error(e)})}}]).controller("ChecklistDetailController",["$scope","$state","$stateParams","lodash","$http","$log","$modal","items","Checklist","$sails",function(e,t,r,s,n,o,a,i,l,c){e.checklist={},e.items=i,c.get("/v1/checklist/"+r.id).then(function(t){e.checklist=t.data},function(e){o.error(e)}),c.on("item",function(t){if(o.debug("data was updated via another session",t),"updated"===t.verb){var r=s.findIndex(e.items,{id:t.id});o.debug(r),e.items[r]=s.merge(e.items[r],t.data),o.debug("Updating item",e.items[r])}}),e.openSearchInfo=function(){a.open({animation:e.animationsEnabled,templateUrl:"myModalContent.html",controller:["$scope","$modalInstance",function(e,t){e.cancel=function(){t.dismiss("cancel")}}]})},e.updateAssignee=function(t,r){c.put("/v1/item/"+r.id,{assignedTo:r.assignedTo}).then(function(s){o.debug("assigneed updated, item model is",s),r.assignedTo=r.assignedTo,e.items[t]=s.data,o.debug(e.items[t])},function(e){o.error(e)})},e.openCommentsModal=function(t,r){a.open({animation:e.animationsEnabled,templateUrl:"commentsModal.html",resolve:{comments:function(){return c.get("/v1/comment",{item:r.id}).then(function(e){return e.data},function(e){o.error(e)})}},controller:["$scope","$modalInstance","$log","comments",function(e,t,s,n){e.comments=n,e.submit=function(t,n){c.post("/v1/comment",{comment:t,item:r.id,createdBy:n.uid}).then(function(t){e.comments.push(t.data)},function(e){s.error(e)})},e.cancel=function(){t.dismiss("cancel")}}]})},e.updateStatus=function(t,r){var s=JSON.parse(angular.toJson(r));o.debug(s,t),c.put("/v1/item/"+r.id,{statuses:s.statuses}).then(function(r){o.debug(t),e.items[t]=r.data},function(e){o.error(e)})}}]),angular.module("App.auth",[]).config(["$stateProvider","AccessLevels",function(e,t){e.state("auth",{"abstract":!0,data:{access:t.roles["public"]},views:{"":{templateUrl:"app/components/auth/auth.layout.html"}}}).state("auth.login",{url:"/login",views:{content:{templateUrl:"app/components/auth/login.tpl.html",controller:"LoginController"}}}).state("auth.resetPassword",{url:"/resetPassword",views:{content:{templateUrl:"app/components/auth/resetPassword.tpl.html",controller:"ResetPasswordController"}}}).state("auth.register",{url:"/register",views:{content:{templateUrl:"app/components/auth/register.tpl.html",controller:"RegisterController"}}})}]).controller("LoginController",["$log","lodash","Utils","Error","$scope","$state","Auth",function(e,t,r,s,n,o,a){n.submitDisabled=!1,n.login=function(){n.submitDisabled=!0,a.login(n.user).then(function(e){o.go(e.resetPassword?"auth.resetPassword":"dashboard.index")},function e(e){s["catch"](e),n.submitDisabled=!1})}}]).controller("ResetPasswordController",["$log","lodash","Utils","Error","$scope","$state","Auth",function(e,t,r,s,n,o,a){n.submitDisabled=!1,n.submit=function(){n.submitDisabled=!0,a.resetPassword(user,newPassword).then(function(t){e.debug(t)},function(t){e.error(t),n.submitDisabled=!1})}}]).controller("RegisterController",["$log","lodash","Utils","Error","$scope","$state","Auth",function(e,t,r,s,n,o,a){n.submitDisabled=!1,n.register=function(){n.submitDisabled=!0,a.register(n.user).then(function(e){o.go("dashboard.index")},function e(t){console.error(t),n.submitDisabled=!1,s["catch"](e)})}}]),angular.module("services.utils",["lodash"]).service("Utils",["$log","lodash","Config",function(e,t,r){return{prepareUrl:function(s,n){if(t.has(r,"api")){if(r.api.ssl)var o="https://";else var o="http://";return o+=r.api.host,r.api.port&&(o=o+":"+r.api.port),n||(o=o+"/"+r.api.version),s&&(t.startsWith(s,"/")?o+=s:o=o+"/"+s),o}e.error("No API information defined in Config")}}}]),angular.module("lodash",[]).factory("lodash",function(){return window._}),angular.module("services.localstorage",["lodash"]).factory("LocalService",function(){return{get:function(e){return localStorage.getItem(e)},set:function(e,t){return localStorage.setItem(e,t)},unset:function(e){return localStorage.removeItem(e)}}}),angular.module("services",["services.localstorage","services.utils","services.errorhandler","services.auth"]),angular.module("services.errorhandler",[]).factory("Error",["$log","lodash","Utils","$rootScope",function(e,t,r,s){return s.alerts=[],s.closeAlert=function(e){s.alerts.splice(e,1)},{"catch":function(t,r){e.error(t);var n={};"error"===t.type&&(t.type="danger"),n={type:t.type||"danger",msg:t.msg},s.alerts.push(n)}}}]),angular.module("services.auth",["lodash"]).factory("Auth",["$log","lodash","Utils","Error","$http","$q","$window","LocalService","AccessLevels",function(e,t,r,s,n,o,a,i,l){function c(e){var t=e.split(".")[1],r=t.replace("-","+").replace("_","/"),s=a.atob(r);return JSON.parse(s)}function d(e){return t.find(l.groups,{id:e})}return{isAuthorized:function(e){var r=i.get("auth_token"),s=c(r);return s.group=d(s.accessLevel),t.includes(e,s.group.name)},authorize:function(e,r){var s=i.get("auth_token");if(!s&&"*"!==e[0])return r({type:"error",msg:"Not Authenticated",category:"NOT_LOGGED_IN"});if(s){var n=c(s);return n.group=d(n.accessLevel),t.includes(e,"*")?r(null,s):t.includes(e,n.group.name)?r(null,s):r({type:"error",msg:"Invalid Authorization",category:"INVALID_AUTHORIZATION"})}},CurrentUser:function(){if(i.get("auth_token")){var e=i.get("auth_token");return c(e)}return{}},login:function(e){var t=o.defer();return n.post(r.prepareUrl("/auth/login"),e).success(function(e){i.set("auth_token",JSON.stringify(e.token)),t.resolve(e)}).error(function(e){t.reject(e)}),t.promise},resetPassword:function(e,t){var s=o.defer();return n.put(r.prepareUrl("/auth/resetPassword/"+e.id),t).success(function(e){s.resolve(e)}).error(function(e){s.reject(e)}),s.promise},logout:function(){i.unset("auth_token")},register:function(e){var t=o.defer();return n.post(r.prepareUrl("/auth/register"),e).success(function(e){i.set("auth_token",JSON.stringify(e.token)),t.resolve(e)}).error(function(e){t.reject(e)}),t.promise}}}]).factory("AuthInterceptor",["$q","$injector",function(e,t){var r=t.get("LocalService");return{request:function(e){var t;return r.get("auth_token")&&(t=angular.fromJson(r.get("auth_token"))),t&&(e.headers.Authorization="Bearer "+t),e},responseError:function(s){return(401===s.status||403===s.status)&&(r.unset("auth_token"),t.get("$state").go("auth.login")),e.reject(s)}}}]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("models.user",["lodash"]).factory("User",["$log","lodash","Utils","Error","$http","$q",function(e,t,r,s,n,o){return{find:function(e){var t=o.defer(),s={params:e||{sort:"id"}};return n.get(r.prepareUrl("/user"),s).success(function(e,r){t.resolve(e)}).error(function(e,r){t.reject(e)}),t.promise},create:function(e){var t=o.defer();return n.post(r.prepareUrl("/user"),e).success(function(e){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise},destroy:function(e){var t=o.defer();return n["delete"](r.prepareUrl("/user/"+e.id)).success(function(e){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise}}}]),angular.module("models.tier",["lodash"]).factory("Tier",["$log","lodash","Utils","Error","$http","$q",function(e,t,r,s,n,o){return{find:function(){var e=o.defer();return e.resolve(["Dev","Test","QA","Prod","Tech Sandbox","Functional Sandbox","N1 Sandbox","Dev1","Test1","QA1","Training","Other"]),e.promise}}}]),angular.module("models.server",["lodash"]).factory("Server",["$log","lodash","Utils","Error","$http","$q",function(e,t,r,s,n,o){return{count:function(e){var t=o.defer(),s={params:e};return n.get(r.prepareUrl("/server/count"),s).success(function(e,r){t.resolve(e)}).error(function(e,r){t.reject(e)}),t.promise},find:function(e){var t=o.defer(),s={params:e||{sort:"id"}};return n.get(r.prepareUrl("/server"),s).success(function(e,r){t.resolve(e)}).error(function(e,r){t.reject(e)}),t.promise},findById:function(e,t){var s=o.defer(),a={params:t||{sort:"id"}};return n.get(r.prepareUrl("/server/"+e),a).success(function(e,t){s.resolve(e)}).error(function(e,t){s.reject(e)}),s.promise},toggleAgentStatus:function(e){var t=o.defer();return n.put(r.prepareUrl("/server/togglestatus/"+e)).success(function(e,r){t.resolve(e)}).error(function(e,r){t.reject(e)}),t.promise},create:function(e){var t=o.defer();return n.post(r.prepareUrl("/server"),e).success(function(e){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise},update:function(e){var t=o.defer();return n.put(r.prepareUrl("/server/"+e.id),e).success(function(e){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise},destroy:function(e){var t=o.defer();return n["delete"](r.prepareUrl("/server/"+e.id)).success(function(e){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise}}}]),angular.module("models.role",["lodash"]).factory("Role",["$log","lodash","Utils","Error","$http","$q",function(e,t,r,s,n,o){return{find:function(){var e=o.defer();return e.resolve(["DB","DI","MS","Other","DG","DB/DI/MS/DG"]),e.promise}}}]),angular.module("models.location",["lodash"]).factory("Location",["$log","lodash","Utils","Error","$http","$q",function(e,t,r,s,n,o){return{find:function(){var e=o.defer();return e.resolve(["EVSC","ISB"]),e.promise}}}]),angular.module("models",["models.user","models.server","models.tier","models.role","models.component","models.location"]),angular.module("models.component",["lodash"]).factory("Component",["$log","lodash","Utils","Error","$http","$q",function(e,t,r,s,n,o){return{find:function(){var e=o.defer();return e.resolve(["Business Objects","BW","Data Services","ECC","Enterprise Portal","GRC","Open Text - Vendor Invoice Management","PI-DAE","Process Integration","Productivity Pack","SLD","Solution Manager","SRM","Vertex","Wily","APM","Salt","Winshuttle","Bobj/DS","Other"]),e.promise}}}]),angular.module("directives",["directives.navbar","directives.confirmDelete","directives.ngPasswordStrength"]),angular.module("constants",[]).constant("AccessLevels",{groups:[{id:1,name:"user"},{id:2,name:"admin"}],roles:{"public":["*"],user:["user","admin"],admin:["admin"]}}).constant("Config",{debugMode:!1,api:{ssl:!1,host:"sapinfrastructure.srp.gov",port:"8000",version:"v1",url:"http://sapinfrastructure.srp.gov:8000"}}),angular.module("App",["ui.router","lodash","ui.bootstrap","ngResource","angularUtils.directives.dirPagination","ngSails","angularSpinner","services","models","constants","directives","App.auth","App.dashboard","App.user","App.server","App.checklist"]).config(["$urlRouterProvider","$sailsProvider","$logProvider","Config",function e(t,r,s,e){r.url=e.api.url,s.debugEnabled(e.debugMode),t.otherwise("/")}]).run(["$log","lodash","Utils","Error","$rootScope","$state","Auth","usSpinnerService",function(e,t,r,s,n,o,a,i){n.user=a.CurrentUser(),n.Utils=r,n.lodash=t,n.spinnerSpinning=!1,n.startSpin=function(){n.spinnerSpinning=!0,i.spin("spinner-1")},n.stopSpin=function(){n.spinnerSpinning=!1,i.stop("spinner-1")},n.$on("$stateChangeStart",function(e,t,r,s,o){t.resolve&&n.startSpin()}),n.$on("$stateChangeSuccess",function(e,t,r,s,o){t.resolve&&n.stopSpin()}),n.$on("$stateChangeStart",function(e,t){a.authorize(t.data.access,function(t,r){t&&(e.preventDefault(),s["catch"](t),o.go("INVALID_AUTHORIZATION"===t.category?"dashboard.index":"auth.login"))})}),n.$on("$stateChangeSuccess",function(){var e=o.$current.data;n.data=e})}]),angular.module("App").run(["$templateCache",function(e){e.put("app/common/templates/layout.tpl.html",'<navbar></navbar><div class="spinnerContainer" ng-show="spinnerSpinning === true"><span us-spinner="{radius:30, width:8, length: 16, color: white}" spinner-key="spinner-1"></span></div><div class="container"><alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert><div ui-view="content"></div></div>'),e.put("app/common/templates/layout_fluid.tpl.html",'<navbar></navbar><div class="spinnerContainer" ng-show="spinnerSpinning === true"><span us-spinner="{radius:30, width:8, length: 16, color: white}" spinner-key="spinner-1"></span></div><div class="container-fluid"><alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert><div ui-view="content"></div></div>'),e.put("app/components/auth/auth.layout.html",'<div class="container"><div ui-view="content"></div></div>'),e.put("app/components/auth/login.tpl.html",'<div class="col-sm-offset-3 col-md-offset-3 col-lg-offset-3 col-sm-6 col-md-6 col-lg-6"><alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert><div class="well login-box"><form class="form" ng-submit="login()" name="loginForm"><legend>Admin Panel</legend><div class="form-group" ng-class="{ \'has-error\': loginForm.username.$invalid && loginForm.username.$dirty }"><label for="username">Username</label> <input id="username" name="username" placeholder="Username" type="text" class="form-control input-lg" ng-model="user.username" required=""></div><div class="form-group" ng-class="{ \'has-error\': loginForm.password.$invalid && loginForm.password.$dirty }"><label for="password">Password</label> <input id="password" name="password" placeholder="Password" type="password" class="form-control input-lg" ng-model="user.password" required=""></div><div class="form-group text-center"><input type="submit" class="btn btn-primary btn-lg btn-block" value="Login" ng-disabled="loginForm.$invalid || submitDisabled"> <a ui-sref="auth.register" class="btn">Register</a><a ui-sref="auth.register" class="btn">Forgot Password</a></div></form></div></div>'),e.put("app/components/auth/register.tpl.html",'<form class="form" name="registerForm" ng-submit="register()"><div class="form-group" ng-class="{ \'has-error\': registerForm.firstName.$dirty && registerForm.firstName.$invalid, \'has-success\': registerForm.firstName.$dirty && registerForm.firstName.$valid }"><label for="firstName">First Name</label> <input class="form-control input-lg" type="text" name="firstName" ng-model="user.firstName" required="" placeholder="Enter Your first Name"> <span ng-show="registerForm.firstName.$dirty && registerForm.firstName.$invalid-required" class="help-block">please enter your First Name.</span></div><div class="form-group" ng-class="{ \'has-error\': registerForm.lastName.$dirty && registerForm.lastName.$invalid, \'has-success\': registerForm.lastName.$dirty && registerForm.lastName.$valid }"><label for="lastName">Last Name</label> <input class="form-control input-lg" type="text" name="lastName" ng-model="user.lastName" required="" placeholder="Enter Your Last Name"> <span ng-show="registerForm.lastName.$dirty && registerForm.lastName.$invalid-required" class="help-block">please enter your Last Name.</span></div><div class="form-group" ng-class="{ \'has-error\': registerForm.username.$dirty && registerForm.username.$invalid, \'has-success\': registerForm.username.$dirty && registerForm.username.$valid }"><label for="username">Username</label> <input class="form-control input-lg" type="text" name="username" ng-model="user.username" required="" placeholder="Enter a username"> <span ng-show="registerForm.username.$dirty && registerForm.username.$invalid-required" class="help-block">please enter a username.</span></div><div class="form-group" ng-class="{ \'has-error\': registerForm.email.$dirty && registerForm.email.$invalid, \'has-success\': registerForm.email.$dirty && registerForm.email.$valid }"><label for="email">Email Address</label> <input class="form-control input-lg" type="email" name="email" ng-model="user.email" required="" placeholder="Enter your email"> <span ng-show="registerForm.email.$dirty && registerForm.email.$invalid-required" class="help-block">please enter a email.</span> <span ng-show="registerForm.email.$dirty && registerForm.email.$invalid-email" class="help-block">please enter a valid email address.</span></div><div class="form-group" ng-class="{ \'has-error\': registerForm.password.$dirty && registerForm.password.$invalid, \'has-success\': registerForm.password.$dirty && registerForm.password.$valid }"><label for="password">Password</label> <input class="form-control input-lg" type="password" name="password" ng-model="user.password" required="" placeholder="Enter a password" minlength="8"> <span ng-show="registerForm.password.$dirty && registerForm.password.$invalid-minlength" class="help-block">Your password must be at least 8 characters long.</span> <span ng-show="registerForm.password.$dirty && registerForm.password.$invalid-required" class="help-block">please enter a password.</span></div><div class="form-group" ng-show="registerForm.password.$dirty"><div class="col-sm-12"><label>Pasword Strength</label><div ng-password-strength="user.password" mode="bootstrap" strength="passStrength"></div></div></div><div class="form-group" ng-class="{ \'has-error\': registerForm.confirmPassword.$dirty && registerForm.confirmPassword.$invalid, \'has-success\': registerForm.confirmPassword.$dirty && registerForm.confirmPassword.$valid }"><label for="password">Password</label> <input class="form-control input-lg" type="password" name="confirmPassword" ng-model="user.confirmPassword" required="" compare-to="user.password" placeholder="Confirm Password"> <span ng-show="registerForm.confirmPassword.$dirty && registerForm.confirmPassword.$invalid-compare-to" class="help-block">looks like your passwords don\'t match!</span></div><div class="form-group"><button type="submit" name="submit" class="btn btn-lg btn-primary" ng-disabled="registerForm.$invalid || submitDisabled">Register</button> <a ui-sref="auth.login" class="btn btn-lg btn-danger">Cancel</a></div></form>'),e.put("app/components/checklist/addByTier.modal.tpl.html",'<div class="modal-header"><h3 class="modal-title">Add By Tier!</h3></div><div class="modal-body"><select class="form-control" ng-model="filter" ng-options="tier as tier for tier in tiers" ng-change="getServers(filter)"><option value="">-- SELECT A TIER ---</option></select></div><div class="modal-footer"><button class="btn btn-primary" type="button" ng-click="ok()">OK</button> <button class="btn btn-warning" type="button" ng-click="cancel()">Cancel</button></div><strong>Tiers</strong><ul><li><input type="checkbox" ng-model="checkAll" ng-click="checkAllListItems()">Check All</li><li ng-repeat="server in servers"><input type="checkbox" ng-model="server.selected" ng-click="addChecklistItem(server)">{{server.hostname}}</li></ul>'),
e.put("app/components/checklist/detail.tpl.html",'<div class="row"><div class="col-xs-8"><h1>{{checklist.name}} - {{items.length}} Item(s)</h1></div><div class="col-xs-4"><div class="input-group"><div class="input-group-btn"><button class="btn btn-info" ng-click="openSearchInfo()"><i class="fa fa-info"></i></button></div><input type="text" class="form-control" ng-model="search" ng-model-options="{ debounce: 700 }" placeholder="Search..."><script type="text/ng-template" id="myModalContent.html"><div class="modal-header"> <h3 class="modal-title">Search Information</h3> </div> <div class="modal-body"> You can search by SID, hostname, or who.. its fuzzy search too.. </div> <div class="modal-footer"> <button class="btn btn-primary" type="button" ng-click="cancel()">Got It!</button> </div></script></div></div><table class="table table-striped table-condensed"><thead><tr><th><strong>Hostname</strong></th><th class="col-xs-2"><strong>Assigned To</strong></th><th class="col-xs-1 align-middle" ng-repeat="status in checklist.statuses"><strong>{{status.name}}</strong></th><th></th></tr></thead><tbody><tr ng-repeat="(itemIndex, item) in items | filter:search"><td>{{item.name}}</td><td class="col-xs-2"><div class="input-group"><input type="text" ng-model="item.assignedTo" class="form-control input-sm"><div class="input-group-btn"><button class="btn btn-sm btn-primary" ng-model="item.assignedTo" ng-click="item.assignedTo = user.username">Me</button> <button class="btn btn-sm btn-success" ng-model="item.assignedTo" ng-click="updateAssignee(itemIndex, item)">Save</button></div></div></td><td class="align-middle" ng-repeat="(statusIndex, status) in item.statuses"><div class="btn-group" dropdown=""><button id="split-button" type="button" class="btn btn-sm" ng-class="{ \'btn-default\': status.value === \'disabled\', \'btn-danger\': status.value === false, \'btn-success\': status.value === true }" ng-model="status.value" ng-change="updateStatus(itemIndex, item)" btn-checkbox="" btn-checkbox-true="true" btn-checkbox-false="false" dropdown-toggle="" ng-disabled="status.value === \'disabled\'"><i class="fa fa-check-circle"></i></button> <button type="button" class="btn btn-sm" ng-class="{ \'btn-default\': status.value === \'disabled\', \'btn-danger\': status.value === false, \'btn-success\': status.value === true }" dropdown-toggle=""><i class="fa fa-caret-down"></i></button><ul class="dropdown-menu" role="menu" aria-labelledby="split-button"><li role="menuitem" ng-if="status.value !== \'disabled\'"><a ng-click="status.value = \'disabled\'; updateStatus(itemIndex, item)">Disable</a></li><li role="menuitem" ng-if="status.value === \'disabled\'"><a ng-click="status.value = false; updateStatus(itemIndex, item)">Enable</a></li></ul></div></td><td><script type="text/ng-template" id="commentsModal.html"><div class="modal-header"> <h3 class="modal-title">Comments</h3> </div> <div class="modal-body"> <p class="well" ng-repeat="comment in comments"><strong>{{comment.createdBy.username}} on {{comment.createdAt | date: \'medium\'}}</strong><br>{{comment.comment}}</p> <hr> <div class="input-group"> <input type="text" class="form-control" ng-model="newComment" placeholder="Add Comment"> <div class="input-group-btn"> <button class="btn btn-success" type="button" ng-click="submit(newComment, user)"><i class="fa fa-plus"></i></button> </div> </div> </div> <div class="modal-footer"> <button class="btn btn-primary" type="button" ng-click="cancel()">Close!</button> </div></script><button class="btn btn-sm btn-primary" ng-click="openCommentsModal($index, item)"><i class="fa fa-comments"></i></button></td></tr></tbody></table></div>'),e.put("app/components/checklist/list.tpl.html",'<h1>Checklists</h1><p class="well" ng-show="checklists.length <= 0">No Checklists found, why don\'t you create one!</p><div class="row"><div class="col-xs-12 col-sm-6"><table class="table" ng-show="checklists.length > 0"><thead><tr><th>Checklist Name</th><th>Created</th><th>Last Updated</th></tr></thead><tbody><tr ng-repeat="checklist in checklists"><td><a ui-sref="checklist.detail({ id: checklist.id })">{{checklist.name}}</a></td><td>{{checklist.createdAt | date: \'medium\'}} by <strong>{{checklist.createdBy.username}}</strong></td><td>{{checklist.updatedAt | date: \'medium\'}}</td><td><ul class="inline-list"><li><button ng-click="destroy($index, checklist)" class="btn btn-sm btn-danger"><i class="fa fa-trash"></i></button></li></ul></td></tr></tbody></table></div></div><hr><div class="row"><div class="col-xs-12"><h1>Create New Checklist</h1></div></div><div class="row"><div class="col-md-4"><h3>Checklist Name</h3><input type="text" class="form-control" ng-model="newChecklist.name" placeholder="Checklist Name"><hr><button class="btn btn-success" ng-click="create()" ng-disabled="$scope.submitCreateChecklist == true">Create Checklist</button></div><div class="col-md-4"><h3>Checklist Statuses</h3><div class="input-group"><input type="text" class="form-control" ng-model="newChecklistStatus.name" placeholder="Status"><div class="input-group-btn"><button class="btn btn-primary" ng-click="addChecklistStatus(newChecklistStatus)"><i class="fa fa-plus"></i></button></div></div><p class="well" ng-show="newChecklist.statuses.length > 0">No statuses found, why don\'t you create some!</p><table class="table table-condensed table-striped" ng-hide="newChecklist.statuses.length <= 0"><thead><tr><th>Status Name</th><th></th></tr></thead><tbody><tr ng-repeat="status in newChecklist.statuses"><td>{{status.name}}</td><td><button class="btn btn-sm btn-danger" ng-click="deleteStatus($index)"><i class="fa fa-trash"></i></button></td></tr></tbody></table></div><div class="col-md-4"><h3>Checklist Items - {{newChecklist.items.length}} Item(s)</h3><div class="input-group"><input type="text" class="form-control" ng-model="newSingleChecklistItem" placeholder="Item Name"><div class="input-group-btn"><button class="btn btn-primary" ng-click="addChecklistItem(newSingleChecklistItem)"><i class="fa fa-plus"></i></button></div></div><hr><select class="form-control" ng-model="filter" ng-options="tier as tier for tier in tiers" ng-change="getServers(filter)"><option value="">-- SELECT A TIER ---</option></select><ul ng-hide="servers.length <= 0"><li><input type="checkbox" ng-model="checkAll" ng-click="checkAllListItems()">Check All</li><li ng-repeat="server in servers"><input type="checkbox" ng-model="server.selected" ng-click="addChecklistItem(server)">{{server.hostname}}</li></ul><p class="well" ng-show="newChecklist.items.length <= 0">No items found, why don\'t you create some!</p><table class="table table-striped" ng-show="newChecklist.items.length > 0"><thead><tr><th>Item Name</th><th></th></tr></thead><tbody><tr ng-repeat="item in newChecklist.items"><td>{{item.name}}</td><td><button class="btn btn-sm btn-danger" ng-click="deleteItem($index)"><i class="fa fa-trash"></i></button></td></tr></tbody></table></div></div>'),e.put("app/components/dashboard/dashboard.tpl.html","<h1>Dashboard</h1>"),e.put("app/components/server/apiKey.modal.tpl.html",'<div class="modal-header"><h3 class="modal-title">Agent Information for {{server.hostname}}</h3></div><div class="modal-body"><div class="well"><strong>API Key</strong> <input type="text" class="form-control" ng-model="server.apiKey" disabled=""> <strong>Agent URL</strong> <input type="text" class="form-control" ng-model="server.urls.agentUpdate" disabled=""></div></div><div class="modal-footer"><button class="btn btn-primary" ng-click="close()">Close</button></div>'),e.put("app/components/server/create.tpl.html",'<h1>Create New User</h1><form class="form" name="createServerForm" ng-submit="create()"><div class="form-group" ng-class="{ \'has-error\': createServerForm.hostname.$dirty && createServerForm.hostname.$invalid, \'has-success\': createServerForm.hostname.$dirty && createServerForm.hostname.$valid }"><label for="hostname">Hostname</label> <input class="form-control input-lg" type="text" name="hostname" ng-model="newServer.hostname" required="" placeholder="Enter the Hostname"> <span ng-show="createServerForm.hostname.$dirty && createServerForm.hostname.$invalid-required" class="help-block">please enter a valid hostname.</span></div><div class="form-group" ng-class="{ \'has-error\': createServerForm.tier.$dirty && createServerForm.tier.$invalid, \'has-success\': createServerForm.tier.$dirty && createServerForm.tier.$valid }"><label for="tier">Tier</label><select class="form-control input-lg" ng-model="newServer.tier" ng-options="tier as tier for tier in tiers"><option value="">-- SELECT A TIER ---</option></select></div><div class="form-group" ng-class="{ \'has-error\': createServerForm.location.$dirty && createServerForm.location.$invalid, \'has-success\': createServerForm.location.$dirty && createServerForm.location.$valid }"><label for="tier">Location</label><select class="form-control input-lg" ng-model="newServer.location" ng-options="location as location for location in locations"><option value="">-- SELECT A LOCATION ---</option></select></div><div class="form-group" ng-class="{ \'has-error\': createServerForm.component.$dirty && createServerForm.component.$invalid, \'has-success\': createServerForm.component.$dirty && createServerForm.component.$valid }"><label for="tier">Component</label><select class="form-control input-lg" ng-model="newServer.component" ng-options="component as component for component in components"><option value="">-- SELECT A COMPONENT ---</option></select></div><div class="form-group" ng-class="{ \'has-error\': createServerForm.role.$dirty && createServerForm.role.$invalid, \'has-success\': createServerForm.role.$dirty && createServerForm.role.$valid }"><label for="tier">Role</label><select class="form-control input-lg" ng-model="newServer.role" ng-options="role as role for role in roles"><option value="">-- SELECT A ROLE ---</option></select></div><div class="form-group"><button type="submit" name="submit" class="btn btn-lg btn-primary" ng-disabled="createServerForm.$invalid || submitDisabled">Create</button> <a ui-sref="server.index" class="btn btn-lg btn-danger">Cancel</a></div></form>'),e.put("app/components/server/detail.tpl.html","<h1>{{server.hostname}} Details</h1>"),e.put("app/components/server/edit.tpl.html",'<h1>Edit {{server.hostname}}</h1><form class="form" name="editServerForm" ng-submit="submit()"><div class="form-group" ng-class="{ \'has-error\': editServerForm.hostname.$dirty && editServerForm.hostname.$invalid, \'has-success\': editServerForm.hostname.$dirty && editServerForm.hostname.$valid }"><label for="hostname">Hostname</label> <input class="form-control input-lg" type="text" name="hostname" ng-model="server.hostname" required="" placeholder="Enter the Hostname"> <span ng-show="editServerForm.hostname.$dirty && editServerForm.hostname.$invalid-required" class="help-block">please enter a valid hostname.</span></div><div class="form-group" ng-class="{ \'has-error\': editServerForm.tier.$dirty && editServerForm.tier.$invalid, \'has-success\': editServerForm.tier.$dirty && editServerForm.tier.$valid }"><label for="tier">Tier</label><select class="form-control input-lg" ng-model="server.tier" ng-options="tier as tier for tier in tiers"><option value="">-- SELECT A TIER ---</option></select></div><div class="form-group" ng-class="{ \'has-error\': editServerForm.location.$dirty && editServerForm.location.$invalid, \'has-success\': editServerForm.location.$dirty && editServerForm.location.$valid }"><label for="tier">Location</label><select class="form-control input-lg" ng-model="server.location" ng-options="location as location for location in locations"><option value="">-- SELECT A LOCATION ---</option></select></div><div class="form-group" ng-class="{ \'has-error\': editServerForm.component.$dirty && editServerForm.component.$invalid, \'has-success\': editServerForm.component.$dirty && editServerForm.component.$valid }"><label for="tier">Component</label><select class="form-control input-lg" ng-model="server.component" ng-options="component as component for component in components"><option value="">-- SELECT A COMPONENT ---</option></select></div><div class="form-group" ng-class="{ \'has-error\': editServerForm.role.$dirty && editServerForm.role.$invalid, \'has-success\': editServerForm.role.$dirty && editServerForm.role.$valid }"><label for="tier">Role</label><select class="form-control input-lg" ng-model="server.role" ng-options="role as role for role in roles"><option value="">-- SELECT A ROLE ---</option></select></div><div class="form-group"><button type="submit" name="submit" class="btn btn-lg btn-primary" ng-disabled="editServerForm.$invalid || submitDisabled">Create</button> <a ui-sref="server.index" class="btn btn-lg btn-danger">Cancel</a></div></form>'),e.put("app/components/server/index.tpl.html",'<h1>Server List</h1><p class="well" ng-show="!servers.length">No servers exist, add one!</p><div class="row"><div class="col-sm-offset-3 col-sm-3 pull-right text-right"><button ui-sref="server.create" class="btn btn-primary">Add New Server</button></div></div><div class="row"><div class="col-sm-2"><div class="row"><h4>Search</h4><p class="oblique">Use this to filter through the shown results in the table</p><input type="text" class="form-control" name="search" ng-model="search" placeholder="Start Typing To Search"></div><div class="row"><h4>Filters</h4><strong>Tiers</strong><select class="form-control" ng-model="filter.tier" ng-options="tier as tier for tier in tiers"><option value="">-- SELECT A TIER ---</option></select></div><div class="row"><button class="btn btn-success btn-block" ng-click="applyFilter()">Apply Filters</button></div></div><div class="col-sm-10" ng-hide=""><table class="table table-striped" ng-hide="!servers.length"><thead><tr><th>Hostname</th><th>Tier</th><th>Component</th><th>Location</th><th>Role</th><th>CPU</th><th>Memory</th><th>Swap</th><th class="text-right">Updated At</th><th></th></tr></thead><tbody><tr dir-paginate="server in servers | filter:search | itemsPerPage: 30" total-items="totalServers" current-page="pagination.current"><td><a ui-sref="server.detail({ id: server.id })">{{ server.hostname }}</a></td><th>{{ server.tier }}</th><th>{{ server.component }}</th><th>{{ server.location }}</th><th>{{ server.role }}</th><td class="text-center"><p ng-hide="!server.cpu">{{ server.cpu }} GB</p></td><td class="text-center"><p ng-hide="!server.memory">{{ server.memory }} GB</p></td><td class="text-center"><p ng-hide="!server.swap">{{ server.swap }} GB</p></td><td class="text-right">{{ server.updatedAt | date:\'short\' }}</td><td class="text-right"><div class="btn-group" dropdown="" is-open="status.isopen"><button type="button" class="btn btn-sm btn-primary" dropdown-toggle="" ng-disabled="disabled"><span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="single-button"><li><a ui-sref="server.edit({ id: server.id })"><i class="fa fa-pencil"></i> Edit Server</a></li><li><a text="are you sure you want to delete the server \'{{server.hostname}}\'?" title="Delete Server" confirm="deleteServer($index, server)"><i class="fa fa-trash"></i> Delete Server</a></li><li><a alt="Show API Key" ng-click="open($index)"><i class="fa fa-key"></i> Show API Key</a></li></ul></div></td></tr></tbody></table><dir-pagination-controls on-page-change="pageChanged(newPageNumber)"></dir-pagination-controls></div></div>'),e.put("app/components/server/tableDropdownMenu.tpl.html",'<div class="btn-group" dropdown="" is-open="status.isopen"><button type="button" class="btn btn-sm btn-primary" dropdown-toggle="" ng-disabled="disabled"><span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="single-button"><li><a ui-sref="server.edit({ id: server.id })"><i class="fa fa-pencil"></i> Edit Server</a></li><li><a text="are you sure you want to delete the server \'{{server.hostname}}\'?" title="Delete Server" confirm="deleteServer($index, server)"><i class="fa fa-trash"></i> Delete Server</a></li><li><a alt="Show API Key" ng-click="open($index)"><i class="fa fa-key"></i> Show API Key</a></li></ul></div>'),e.put("app/components/user/create.tpl.html",'<h1>Create New User</h1><form class="form" name="registerForm" ng-submit="register()"><div class="row"><div class="form-group col-sm-6" ng-class="{ \'has-error\': registerForm.firstName.$dirty && registerForm.firstName.$invalid, \'has-success\': registerForm.firstName.$dirty && registerForm.firstName.$valid }"><label for="firstName">First Name</label> <input class="form-control input-lg" type="text" name="firstName" ng-model="newUser.firstName" required="" placeholder="Enter Your first Name"> <span ng-show="registerForm.firstName.$dirty && registerForm.firstName.$invalid-required" class="help-block">please enter your First Name.</span></div><div class="form-group col-sm-6" ng-class="{ \'has-error\': registerForm.lastName.$dirty && registerForm.lastName.$invalid, \'has-success\': registerForm.lastName.$dirty && registerForm.lastName.$valid }"><label for="lastName">Last Name</label> <input class="form-control input-lg" type="text" name="lastName" ng-model="newUser.lastName" required="" placeholder="Enter Your Last Name"> <span ng-show="registerForm.lastName.$dirty && registerForm.lastName.$invalid-required" class="help-block">please enter your Last Name.</span></div></div><div class="row"><div class="form-group col-sm-5" ng-class="{ \'has-error\': registerForm.username.$dirty && registerForm.username.$invalid, \'has-success\': registerForm.username.$dirty && registerForm.username.$valid }"><label for="username">Username</label> <input class="form-control input-lg" type="text" name="username" ng-model="newUser.username" required="" placeholder="Enter a username"> <span ng-show="registerForm.username.$dirty && registerForm.username.$invalid-required" class="help-block">please enter a username.</span></div><div class="form-group col-sm-7" ng-class="{ \'has-error\': registerForm.email.$dirty && registerForm.email.$invalid, \'has-success\': registerForm.email.$dirty && registerForm.email.$valid }"><label for="email">Email Address</label> <input class="form-control input-lg" type="email" name="email" ng-model="newUser.email" required="" placeholder="Enter your email"> <span ng-show="registerForm.email.$dirty && registerForm.email.$invalid-required" class="help-block">please enter a email.</span> <span ng-show="registerForm.email.$dirty && registerForm.email.$invalid-email" class="help-block">please enter a valid email address.</span></div></div><div class="row"><div class="form-group col-sm-4"><label>Access Level</label><select class="form-control input-lg" ng-model="newUser.accessLevel" ng-options="level.id as level.name for level in groups"></select></div><div class="form-group col-sm-8"></div></div><div class="row"><div class="form-group col-sm-6" ng-class="{ \'has-error\': registerForm.password.$dirty && registerForm.password.$invalid, \'has-success\': registerForm.password.$dirty && registerForm.password.$valid }"><label for="password">Password</label> <input class="form-control input-lg" type="password" name="password" ng-model="newUser.password" required="" placeholder="Enter a password" minlength="8"> <span ng-show="registerForm.password.$dirty && registerForm.password.$invalid-minlength" class="help-block">Your password must be at least 8 characters long.</span> <span ng-show="registerForm.password.$dirty && registerForm.password.$invalid-required" class="help-block">please enter a password.</span></div><div class="form-group col-sm-6" ng-class="{ \'has-error\': registerForm.confirmPassword.$dirty && registerForm.confirmPassword.$invalid, \'has-success\': registerForm.confirmPassword.$dirty && registerForm.confirmPassword.$valid }"><label for="password">Confirm Password</label> <input class="form-control input-lg" type="password" name="confirmPassword" ng-model="newUser.confirmPassword" required="" compare-to="newUser.password" placeholder="Confirm Password"> <span ng-show="registerForm.confirmPassword.$dirty && registerForm.confirmPassword.$invalid-compare-to" class="help-block">looks like your passwords don\'t match!</span></div></div><div class="row"><hr><div class="form-group col-sm-12"><button type="submit" name="submit" class="btn btn-lg btn-primary" ng-disabled="registerForm.$invalid || submitDisabled">Register</button> <a ui-sref="auth.login" class="btn btn-lg btn-danger">Cancel</a></div></div></form>'),e.put("app/components/user/index.tpl.html",'<h1>User List</h1><table class="table table-striped" ng-table=""><thead><tr><th>id</th><th>username</th><th>email</th><th>Access Level</th><th>Created At</th><th></th></tr></thead><tbody><tr ng-repeat="user in users"><td>{{ user.id }}</td><td>{{ user.username }}</td><td>{{ user.email }}</td><td>{{ user.accessLevel }}</td><td>{{ user.createdAt | date:\'medium\' }}</td><td><ul class="inline-list"><li><button class="btn btn-sm btn-warning"><i class="fa fa-lg fa-pencil"></i></button></li><li><button class="btn btn-sm btn-danger" text="are you sure you want to delete the item \'{{user.username}}\'?" title="Delete User" confirm="deleteUser($index, user)"><i class="fa fa-lg fa-trash"></i></button></li><li><button class="btn btn-sm btn-info" alt="Reset Password"><i class="fa fa-lg fa-key"></i></button></li></ul></td></tr></tbody></table><a ui-sref="user.create" class="btn btn-primary">Add New User</a>'),e.put("app/common/directives/confirmDelete/confirmDelete.tpl.html",'<div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" id="myModalLabel">{{title}}</h4></div><div class="modal-body">{{text}}</div><div class="modal-footer"><button type="button" class="btn btn-primary" ng-click="cancel()">No</button> <button type="button" class="btn btn-danger" ng-click="ok()">Yes</button></div>'),e.put("app/common/directives/navbar/navbar.tpl.html",'<div class="navbar navbar-default navbar-fixed-top" role="navigation"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" ui-sref="dashboard">SAP Infrastructure</a></div><div class="collapse navbar-collapse"><ul class="nav navbar-nav"><li><a ui-sref="dashboard.index">Dashboard</a></li><li><a ui-sref="server.index">Servers</a></li><li><a ui-sref="checklist.index">Checklists</a></li><li><a ui-sref="user.index" ng-hide="!isAuthorized(\'admin\')">Users</a></li></ul><ul class="nav navbar-nav navbar-right"><li id="current-user-dropdown" class="dropdown navbar-button"><div class="btn-group" dropdown="" is-open="status.isopen"><button type="button" class="btn btn-primary dropdown-toggle" dropdown-toggle="" ng-disabled="disabled">Hey There, {{user.username}} <i class="fa fa-caret-down"></i></button><ul class="dropdown-menu" role="menu"><li class="divider"></li><li><a ng-click="logout()"><i class="fa fa-share"></i> Logout</a></li></ul></div></li></ul></div></div></div>')}]);